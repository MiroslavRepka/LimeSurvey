name: CI pipeline for LimeSurvey
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]  # All push and PR
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  CI-pipeline:
    runs-on: ubuntu-18.04    # ubuntu runner hosted by Github
    strategy:
      matrix:
        php-versions: ['7.2'] #, '8.0']
    # Env vars for this job
    env:
      DBENGINE: INNODB
    name: PHP ${{ matrix.php-versions }} # Check each version of php specified in matrix
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # This will change the php version for every version specified in matrix https://github.com/marketplace/actions/setup-php-action
      - name: Install specified PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
      # Start the MySQL service - https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu1804-README.md#mysql
      - name: Start the MySQL service
        run: |
          sudo systemctl start mysql.service

      - name: Initilize and check all dependencies
        run: |
          # Before running composer install, check that the autoloader is up-to-date and all classes can be loaded.
          php tests/check_autoloader.php

          # Test
          echo $archive_url
          php -r 'var_dump(PHP_INT_SIZE);'
      
          # Install LimeSurvey.
          php -m  # Spit out all loaded PHP modules
          mysql --version
          touch enabletests
          # NB: PHPUnit 6.5.* is installed with composer.
          composer install -vvv
          ./third_party/bin/phpunit --version

          chmod -R 777 tmp
          chmod -R 777 upload
          chmod -R 777 themes  # Need 777 so both console and web server can cd into the folder.
          chmod -R 777 tests/tmp
          chmod +x tests/bin/lint-*

          # InnoDB needs large_file_prefix & Barracuda file format
          # https://discuss.gogs.io/t/solved-mysql-error-1064-while-running-first-install/1604
          # InnoDB variables ARE already set to desired values in Github runner (ubuntu-18.04)

          sudo service mysql status
          mysql -uroot -proot -e "Show  variables like '%large%';"
          mysql -uroot -proot -e "Show  variables like '%innodb_file%';"
          mysql -uroot -proot -e "Show  variables like '%innodb_default%';"

          php application/commands/console.php install admin password TravisLS no@email.com verbose
          cp application/config/config-sample-mysql.php application/config/config.php
          # Enable debug=2 in config file. OBS: This assumes debug is on line 61.
          # TODO: Disable, a lines was added to config file and some tests started to fail.
          # NB: EmCache is always disabled when debug => 2
          # NB: There can be a difference in assets used when debug = 0 or 2 (minified version or not)
          # - sed -i '61s/.*/        "debug"=>2,/' application/config/config.php
          # - cat application/config/config.php
    
          # Apache2, Node.js, firefox are already installed in Github runner
          which firefox
          firefox -v

          # Set up the Apache2 and PHP
          git clone git://github.com/phpenv/phpenv.git ~/.phpenv
          echo 'export PATH="$HOME/.phpenv/bin:$PATH"' >> ~/.bash_profile
          echo 'eval "$(phpenv init -)"' >> ~/.bash_profile
          sudo source  ~/.bash_profile
          sudo apt-get update > /dev/null
          sudo apt-get -y install php-fpm
          wget https://mirrors.edge.kernel.org/ubuntu/pool/multiverse/liba/libapache-mod-fastcgi/libapache2-mod-fastcgi_2.4.7~0910052141-1.2_amd64.deb

          sudo cp ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.conf.default ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.conf
          sudo cp ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.d/www.conf.default ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.d/www.conf
          sudo a2enmod rewrite actions fastcgi alias
          echo "cgi.fix_pathinfo = 1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
          sudo sed -i -e "s,www-data,$USER,g" /etc/apache2/envvars
          sudo chown -R $USER:$USER /var/lib/apache2/fastcgi
          ~/.phpenv/versions/$(phpenv version-name)/sbin/php-fpm
          sudo cp -f tests/travis/github-actions-apache /etc/apache2/sites-available/000-default.conf
          sudo sed -e "s?%CI_BUILD_DIR%?$(pwd)?g" --in-place /etc/apache2/sites-available/000-default.conf
          sudo service apache2 restart

          
          # This will run syntax check, CodeSniffer, MessDetector, etc
          composer test

          # Test server.
          wget localhost
          cat index.html

          # Chromedriver setup.
          # Note: Keep getting timeout problems on Travis with chromedriver.
          #- wget https://chromedriver.storage.googleapis.com/2.33/chromedriver_linux64.zip
          #- unzip chromedriver_linux64.zip

          # Setup Selenium with Firefox headless mode, Gecko driver already installed
          wget "https://selenium-release.storage.googleapis.com/3.7/selenium-server-standalone-3.7.1.jar"
          export MOZ_HEADLESS=1
          java -jar selenium-server-standalone-3.7.1.jar -enablePassThrough false > /dev/null 2> /dev/null &

          echo "Preparing node.js components"
          # Prepare the packages that need to be tested
          # Update the nvm
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
          source ~/.nvm/nvm.sh
          nvm install 10.16.3
          nvm use 10.16.3
          node ./buildVueComponents.js -s adminbasics -p
      - name: Run the test script
        run: |
          DOMAIN=localhost ./third_party/bin/phpunit --testdox #--stop-on-failure
          yarn --cwd ./assets/packages/adminbasics run test

  
